(function() {var implementors = {};
implementors["slotmap"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"slotmap/struct.KeyData.html\" title=\"struct slotmap::KeyData\">KeyData</a>","synthetic":false,"types":["slotmap::KeyData"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"slotmap/struct.DefaultKey.html\" title=\"struct slotmap::DefaultKey\">DefaultKey</a>","synthetic":false,"types":["slotmap::DefaultKey"]}];
implementors["smeagol"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"smeagol/bool8x8/struct.Bool8x8.html\" title=\"struct smeagol::bool8x8::Bool8x8\">Bool8x8</a>","synthetic":false,"types":["smeagol::bool8x8::Bool8x8"]},{"text":"impl&lt;A:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"smeagol/grid/trait.SquareArray.html\" title=\"trait smeagol::grid::SquareArray\">SquareArray</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"smeagol/grid/struct.Grid.html\" title=\"struct smeagol::grid::Grid\">Grid</a>&lt;A&gt;","synthetic":false,"types":["smeagol::grid::Grid"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"smeagol/node/struct.Level.html\" title=\"struct smeagol::node::Level\">Level</a>","synthetic":false,"types":["smeagol::node::Level"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"smeagol/node/struct.NodeId.html\" title=\"struct smeagol::node::NodeId\">NodeId</a>","synthetic":false,"types":["smeagol::node::NodeId"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"enum\" href=\"smeagol/node/enum.Node.html\" title=\"enum smeagol::node::Node\">Node</a>","synthetic":false,"types":["smeagol::node::Node"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"smeagol/node/struct.Leaf.html\" title=\"struct smeagol::node::Leaf\">Leaf</a>","synthetic":false,"types":["smeagol::node::Leaf"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"smeagol/node/struct.Branch.html\" title=\"struct smeagol::node::Branch\">Branch</a>","synthetic":false,"types":["smeagol::node::Branch"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"smeagol/struct.Rule.html\" title=\"struct smeagol::Rule\">Rule</a>","synthetic":false,"types":["smeagol::Rule"]}];
implementors["tinyvec"] = [{"text":"impl&lt;A:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"tinyvec/trait.Array.html\" title=\"trait tinyvec::Array\">Array</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"tinyvec/struct.ArrayVec.html\" title=\"struct tinyvec::ArrayVec\">ArrayVec</a>&lt;A&gt;","synthetic":false,"types":["tinyvec::arrayvec::ArrayVec"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()